
109/07/20-109/10/19 曾擔任 '存保公司-特查處-試用人員' 3個月
111/10/03-131/10/02 準備擔任 '存保公司-資訊人員' 20年

通勤費用估算: 
  1. 去存保上班: 15+50(單趟) * 2(來回) * 20(天數) = 2,600元(一定要買1280定期票, 否則不划算)
  ===
  2. 去瀚荃上班: 15(單趟) * 2(來回) * 20(天數) = 600元
  3. 找羽謙打球(從淡水出發): 50(單趟) * 2(來回) * 4(次數) = 400元
  4. 來回宜蘭(從淡水出發): 50(單趟) * 2(來回) * 4(次數) = 400元
  === 600 + 400 + 400 = 1400元(看起來在淡水工作, 也必須買1280定期票) ===

==(在台銀曾協助ISMS工作進行)==
  1. 從程式員角度，協助資訊安全防護工作的進行，檢視委外網站弱掃報告及跟催程式改版進度
  2. 這時候，就延伸出 => 安全性程式設計原則 & 檢視OWASP TOP 10 & ASVS(Application Security Verification Standard 4.0.3 2021-10-03)

==強化軟體開發資安要作的5件事(OK, 2022-09-20)==
  參考資料: https://www.ithome.com.tw/article/108616
  文章重點:
   1. 資訊安全最大的罩門仍在於(人們的資安意識是否落實)
   2. 我們應該設計一套能夠鼓勵良好行為的安全系統，避免人為因素成為資訊安全破口
   3. IT應用程式的安全原則
      ●  認證設計。
            你要決定如何辨識使用者，並決定他們需要給出什麼樣的證據來證明他們就是所宣稱的那些人。
            為應用程式開發一套安全計畫時，有一部份要做的工作是，你要在承擔多少風險、以及讓使用者享受多少方便之間取得一個平衡點。
            OpenID 可單一登入存取多個網站資源, 例: stackoverflow.com, 但這個方式對網路銀行網站就極度不適用(風險高).

      ●  存取控制設計。
            你要給不同的用戶群組（或個別使用者）不同的存取權限。
            <同群組成員具同命令存取權限集合> 考慮在一套應用程式中所有可能的命令集合，每個用戶群組可以使用這個命令集合中的一個子集合命令。
            <雖同命令存取權限集合, 但因使用者不同, 再限制為只能存取個別使用者資料> 此外你也可能要對資料的存取進行控制，例如，線上銀行的客戶雖然都有同樣的命令集合，但是被限制只能用在自己所擁有的帳戶上。
            應用程式(能否使用), 功能(經理及職員功能有別), 資料(僅限自身資料 或 所屬層級下所有資料, 但不含層級上的資料)

      ●  使用者管理設計。
            你須決定如何新增使用者、刪除使用者、添加權限、以及移除權限等。
            你也要決定由誰來負責使用者的管理。
            當使用者角色異動時, 對應功能權限是否比照增刪修。(例: 離退須刪除, 入職須新增, 輪調須異動...)

      ●  安全防護。
            你須定義(如何設定伺服器)以及(如何寫程式)，才不會有安全漏洞讓有心人規避認證程序或存取控制。
            你還需要做些保護以避免遭受破壞與對抗資源竊賊－即惡意地讓你的應用程式部分或全面性的無法使用。

      ●  安全監控設計。
            你須決定(如何找出應用程式所受到的攻擊)，以及(如何蒐集攻擊的紀錄)。

  文章內容:
      安全性設計這個議題無所不在，每個人都應該盡自己的本分，不只是開發團隊，還包括應用程式管理人員以及終端使用者。
      因此，也許有人要全面監控安全性，但並沒有單獨一位人員是安全性設計師。

      這些年來一直有大量的討論是與IT的安全性有關的議題，有些是用類似網路大戰及網路恐怖主義等世界末日般的措辭。
      無庸置疑的，現在我們周遭的確是有很多網路犯罪，但如果看仔細一點，你會發現它們大部分的獵物都是幼稚的電腦使用者。
      當然，這並不能讓這種事變得比較能讓人接受，但這意味著我們能打造一套安全的IT應用程式，而(最大的罩門則是人們)。

      無庸置疑的，組織應該要顧慮到網路間諜活動。大部分的攻擊都是仰賴在有人第一次不小心將惡意的程式載入到辦公室的PC上。
      有種有效的攻擊方式為魚叉式網路釣魚（spear phishing attack）──有人在被鎖定的目標組織中，
      收到一封看起來像是該組織中其他可信的人所寄來的電子郵件，信中夾帶的是個檔案。

      這個檔案其實是一支程式，它可以開啟一個後門通向外部的機器，那部機器不太可能是攻擊的來源PC，
      而是某部被奴役的伺服器，代替攻擊者來發動攻擊。
      這個程式可讓攻擊者窺探、下載額外的程式、以及上傳資料。
      
      有許多種防禦的辦法可用來對抗這種攻擊：
      ●  教育使用者不要被釣魚式攻擊所欺騙。不過，也許你的組織中有人在為敵人做事，那樣的話這個方法就不管用了。
      ●  將電子郵件伺服器設定成會將執行檔過濾掉。不過比較難防止使用者去點擊連結以及偵測指向含有惡意軟體網站的連結，點擊這種連結被稱為偷渡式下載（drive-by download）。
            這種做法大部分都是可防堵的，但前提是：
            ●  該PC的軟體有保持更新到最新的版本
            ●  使用者不會利用管理者權限來進行日常的工作
            ●  防火牆有被開啟

      我們又再次回到教育的問題了。
      ●  找一家安全性專業的公司來合作，並且盡快嘗試找出並且去除任何留有後門的程式。當然，在程式被載入與被去除之間有一段時間差。
      ●  確保會存取網際網路的PC不會有權限去存取任何敏感的資料。
         不幸的是，現在每個人都要能夠存取網際網路，而且人們想要在家工作，通常會使用含有敏感資料的PC來連接網際網路。
      ●  確保使用者存取的敏感資料是被加密過的。
         但對於PC載入的文件來說，有一種按鍵記錄程式（keystroke-logging program）能夠讀取使用者所按的鍵然後觀察所輸入的密碼。
      ●  試著避免讓間諜程式與其來源伺服器聯絡。
         不過許多間諜程式偽裝成一個Web瀏覽器來與來源伺服器聯絡，因此防堵這些間諜程式就等於得禁止所有Web的存取。

      將資料庫的資料加密是很容易的，那可讓間諜程式要攻擊資料庫時變得比較困難，而且這些攻擊所造成的損害，其中大部分是由於機密文件遭竊、
      而不是資料庫的資料。然而，有些應用程式允許將資料庫的資料轉成試算表檔案，那樣會再次地開啟漏洞。

      這些討論說明了設計一套安全系統的主要困難點：(弱點在於人)。
      人們通常想要被信任，假如他們可以自由決定，他們會很樂意地將(具有特殊權限的使用者名稱與密碼告訴朋友或熟人)，並且(把機密的資訊傳送給任何一個聲稱他們需要該資訊的人)。

      這個推論是大家經常忽略的一點：(我們應該設計一套能夠鼓勵良好行為的安全系統)。
      尤其是，安全措施不應該讓人們在進行一般業務時變得比較困難，因為如果這樣的話，人們會去尋找方法，而通常來說他們最後還是會找到方法。例如，他們會打電話給身在其他部門的朋友，請他們將所需要的資訊透過電子郵件寄出來。你要營造一種文化，在這個文化下因為每個人都知道系統會允許他們看到他們想知道的資料，因此任何想要規避安全性的請求都會被以懷疑的態度看待。換句話說，太多與太少的安全性限制是一樣不好的。

      IT應用程式的安全原則

      安全設計的目標很容易解釋：去控制哪些人可以做哪些事。我們可將這個分解成以下幾點：

      ●  認證設計。
            你要決定如何辨識使用者，並決定他們需要給出什麼樣的證據來證明他們就是所宣稱的那些人。

      ●  存取控制設計。
            你要給不同的用戶群組（或個別使用者）不同的存取權限。
            <同群組成員具同命令存取權限集合> 考慮在一套應用程式中所有可能的命令集合，每個用戶群組可以使用這個命令集合中的一個子集合命令。
            <雖同命令存取權限集合, 但因使用者不同, 再限制為只能存取個別使用者資料> 此外你也可能要對資料的存取進行控制，例如，線上銀行的客戶雖然都有同樣的命令集合，但是被限制只能用在自己所擁有的帳戶上。

      ●  使用者管理設計。
            你須決定如何新增使用者、刪除使用者、添加權限、以及移除權限等。
            你也要決定由誰來負責使用者的管理。

      ●  安全防護。
            你須定義(如何設定伺服器)以及(如何寫程式)，才不會有安全漏洞讓有心人規避認證程序或存取控制。
            你還需要做些保護以避免遭受破壞與對抗資源竊賊－即惡意地讓你的應用程式部分或全面性的無法使用。

      ●  安全監控設計。
            你須決定(如何找出應用程式所受到的攻擊)，以及(如何蒐集攻擊的紀錄)。

      IT應用程式設計團隊也許不會被允許去執行（或沒有能力執行）各方面的安全設計。
            安全防護特別仰賴在伺服器的安全、網路安全、以及實體安全等，這些都是很深的技術主題。
            因此取而代之的，IT應用程式設計者們通常只會對IT作業部門提出需求，讓他們提供一套安全的系統來運行他們的應用程式。
            假如你採用的是某個雲端廠商，很多伺服器安全、網路安全、及實體安全都將會是該廠商的責任。

      IT應用程式設計團隊不被允許執行各方面安全性設計的另一個原因是，在組織中已經有個安全部門會去吩咐某些部分的安全設計，
      特別是認證（也許是採用全公司的認證機制）、安全管理、以及安全監控等技術領域。

      認證

            做認證最簡單也是最常見的方法，就是讓使用者利用用戶名稱與密碼來登入。
            有許多反對這樣設計的理由。
                  第一，實務上密碼很容易被猜到。有非常驚人的人數只是簡單地將密碼設定為「password」這幾個字母，
                  這就是為何有些網站強迫你選擇一個含有八個以上、混合數字與大小寫字母的原因。
                  第二，人們到頭來會有很多密碼，各用在他們使用的許多應用程式上，
                  而由於他們無法全部記住，於是就會將它們寫下來，不然他們就是會在很多不同的應用程式上使用相同的密碼。
                  第三，假如有人在偷看、或者是你並不知道有個按鍵記錄程式在執行，他們就能夠看到你輸入了什麼。

            與很多線上企業（而且是知名的）相比，銀行似乎是比較擔心最後這個問題，
                  也許是一般企業比較害怕受到較沒安全意識的客戶拒絕使用，因為那些正是大多數的人。
                  在我的經驗裡，銀行會問一些額外的問題，例如「你母親的娘家姓什麼？」，而且還會讓部分密碼空著，
                  讓你只需要針對它從密碼中隨機選擇的三個字元來輸入。

            將部分密碼空白的原因是為了給按鍵記錄程式創造一些難度。
                  下一次你登入時，你被要求輸入的會是另外不同的三個字元，因此按鍵記錄程式在重新組合出完整的密碼之前，
                  必須觀察你登入很多次。
                  增加按鍵記錄程式困難度的另一個方法，就是設計一種利用移動滑鼠與點擊滑鼠來提交密碼的方法，而不是利用打字的方式，
                  例如，你可提供一個隨機排列字元的虛擬鍵盤。

            (認證最脆弱的區域就是密碼的復原)──換句話說，就是使用者忘記密碼時的處理步驟。
                  主要的問題有：

            ●  你怎麼保證你有將新的密碼傳送給正確的人？
            ●  你怎麼防止密碼被中途攔截？

            有些組織認為將新密碼傳送到一個電子郵件地址就夠了，但利用簡訊傳送也許比較安全一點。
            其他會問類似這樣的問題，「你母親的娘家姓什麼？」然後在線上或透過電話將密碼給你。
            只要是想認真入侵你帳號的人將會知道這些問題的答案。
            還有另外一些應用程式會透過信件或使用混合的方法（一部份密碼用傳統郵件來送、另一部份以電子郵件來送）來傳遞新的密碼。
            雖然使用者會感到有點痛苦，但是這樣做安全多了。
            和以往一樣，最佳的方法是哪一種，要視你需要讓應用程式多麼安全而定。

            一種為應用程式認證的方法為單一登入（single sign-on）。
            這個想法是讓使用者登入一次即可操作很多套應用程式。
            因此如果登入比一般還要複雜一些，使用者也比較不會覺得有問題，而且使用者也可享受只需記住一組密碼的好處。
            它的缺點是如果有人發現了某個使用者的密碼，同時會有很多套應用程式可被入侵，而非只有一套。
            再者，人們常會離開在電腦時還保留登入狀態一段時間，那樣可能讓有人有機會使用你的機器，
            在你離開座位、前去開會、或是去吃午餐時假裝是你來進行某些活動。
            
            你可透過被稱為OpenID的Web技術來進行單一登入，這樣做時必須要有一個Web網站（Google或Facebook都是典型的例子）負責處理登入。

            當使用者連到這種應用程式時，該應用程式會發送出一個訊息給另外那個Web網站來認證。應用程式會收到返回的訊息，告訴它登入是否成功。
            假如你想要實際看個例子，試著登入stackoverflow.com，這是個很有用的網站，專門回答程式設計方面的問題。
            雖然OpenID是個運作得很好也很健全的技術，而且帶來單一登入Web的好處，但如果我在經營一家銀行的話，我就不會信任說某人的Google登入是特別安全的。
            
            為應用程式開發一套安全計畫時，有一部份要做的工作是，你要在承擔多少風險、以及讓使用者享受多少方便之間取得一個平衡點。

      存取控制

            使用者一旦通過認證，他們便開始進入一個會期（session）當中。在很多（也許佔大部分）應用程式中，程式必須利用認證流程所提供的使用者識別，找出該使用者所屬的用戶群組。

            應用程式中的存取控制方式是由應用程式來決定。
            對於安全性的理解有個會讓人混淆的地方是，包括作業系統、資料庫軟體、交易監控程式、以及Web伺服器軟體等全都聲稱會進行存取控制。
            它們的確會做，不過所做的程度非常有限，而且它們通常假設一支程式是由一個使用者使用的，
            這在Web伺服器上的應用程式來說顯然不是這個一回事。

            應用程式中的存取控制主要是要確保：

            ●  (應用程式)存取控制。只有特定一組人被允許使用這套應用程式。
            ●  (功能)存取控制。在一套應用程式中，特定用戶群組的成員會被允許去存取一些額外的任務。例如，也許會有額外的功能可以讓經理級的人員使用。要實行這樣的機制，最好的方法是在畫面上只出現該使用者能夠執行的作業。例如，經理級人員的網頁上也許會比別人多了幾個額外的按鈕。
            ●  (資料)存取控制。例如，在線上銀行交易中，你所看到的資料只限於是你自己帳戶所擁有的。

            在書籍或文獻中說明的還有另一種型式的存取控制，那就是安全性層級。
            這是相當在電腦上將文件標示為機密、最高機密、以及其他等等的機密等級字樣，而這個想法是使用者具有一個許可級別，讓他們能夠根據級別來決定可以看到那些文件。（可以讓他們的文件寫入層級高於閱讀層級！）我從未被要求過從事類似這樣的系統，不過我在某些高度安全的環境工作過，例如銀行與執法單位。
            許多廣為人知的間諜案例，例如Robert Hanssen與Edward Snowden，其不尋常的一面就是他們能設法弄到手的文件之數量與涵蓋範圍。
            這留給人們的印象是，到底CIA有沒有實施多重等級的安全控管，他們當時並沒有好好的實施。

            然而，我曾被要求實現複雜的存取控制類型，我寫過一套應用程式來記錄營業工作檢討，其存取控制的規則是，
            經理級人員能夠看到他們所在層級以下的所有資料，不只包括他們管轄的作業，也包括該管理層級以下的所有資料。
            他們能夠看到比自己層級低的，但不能看層級高的。

      使用者管理

            類似像Facebook這樣的應用程式主要是有由使用者作自我管理的，使用者們決定他們自己的帳號名稱與密碼。
            線上銀行以及線上購物應用程式也是一樣，不過在申請線上存取與核准線上存取之間，銀行可能會做一些延遲。
            不過對於組織內部的應用程式而言就不是這樣了，通常來說，當人們更換工作時，他們應該要被授權來使用他們即將要使用的新應用程式，
            而且（這部分比較難）必須把他們舊工作用到的應用程式之存取權限撤銷。
            
            有個大問題是，很少有組織具有適當的流程來精確且一致地執行這個工作。
            常見的原因是每套應用程式都有不同的人或團隊來負責做安全性的管理。

            使用者管理有可能會是個安全漏洞的來源。
            與其說是系統管理者帶有不懷好意的心態來指定使用權限並造成明顯的漏洞，根本的原因通常是懶惰、太傻、或是太天真地相信他們的同事。
            我曾經寫過一套幾乎在各方面都很安全的程式，但是我讓系統管理者替一位新使用者設定初始帳號與密碼，
            這個系統管理者設計了一套簡單的策略將姓名與初始設定值轉成帳號與密碼。
            
            很不幸地，如果你透過這位系統管理者得到帳號名稱與密碼，你就能很容易地猜出規則來產生其他每個人的帳號名稱與密碼。
            使用者雖然可以透過更改密碼來保護他們自己，但有多少人改了他們的密碼呢？一個也沒有。
            當時我真該做的事就是讓新使用者密碼透過隨機的方式來產生，這樣可以讓該應用程式更加安全。安全性的解決辦法通常很簡單，
            只是你必須知道問題是什麼。

      安全防護

            以下是機密洩漏的可能方式（無疑的這只是其中一部份）：

            ●  盜取或猜測密碼。

            ●  在使用者不知情的狀況下使用已經認證成功的管道。
            這個想法本質上就是去盜取並再次利用會期資料。有許多防範的方法來對抗，一種是讓伺服器定期地提供新的會期識別給客戶端程式。
            關閉已經完成的會期也是很重要的。不幸的是，除非使用者進行登出，否則在Web上很難偵測會期在何時結束。
            唯一的解決辦法是利用逾時倒數，這就是為何你在一短暫時間沒繼續使用線上銀行應用程式之後它會逾時，而你必須再登入一次。
            相對危險的是在你PC上運行的程式能夠在背後偷偷的利用你的會期資料來進行活動。

            ●  訊息攔截。
            假設你是透過開放的無線網路來存取一套應用程式，就像在網路咖啡店裡一樣。
            其他人有可能把他們的PC設置成無線的集線器，然後監視流經這個集線器的所有資料。
            在網際網路上對抗這種問題的做法通常是利用TLS或SSL加密。

            ●  應用程式意外地提供了一項沒有做存取控制檢查的命令。
            這是一種程式設計疏失，不過同樣的，如果你知道有這個問題，那是很容易修復的。

            ●  從伺服器做檔案資料傳輸。
            伺服器也許設置成支援可以將檔案複製過去，或從那裡複製出來（通常是透過FTP──檔案傳輸協議），
            因此這個操作可以載入應用程式檔案以及複製任何錯誤的日誌檔。這種檔案傳輸的密碼必須是安全的。

            ●  在伺服器上讀寫資料檔案或資料庫。
            IT作業部門最可能需要做這件事，即使只是將軟體更新成最新版本。
            他們必須確保做這些作業時是被安全地進行。你可將重要資料加密，因此如果伺服器洩漏了資料，這些資料仍舊是安全的。

            ●  將程式安裝並執行於伺服器上。
            同樣的，這是IT作業部門所需要的他們必須以安全的方式來進行。

            ●  讀取備份資料。
            資料庫中的資料在用來備份的資料庫中也存有一份複本。解決辦法是將資料加密。

            這些項目當中，有一些是IT應用程式設計者的責任，有些是程式設計師的，但很多都是IT作業部門與系統管理人員的責任。（摘錄自第12章）

==什麼是 NoSQL？(說明NoSQL 及 RDBMS的差異)==
  https://aws.amazon.com/tw/nosql/


==自傳(上傳金融研訓院)(OK, 2022-09-17)==========================================================================================
  各位長官好，我叫鄭光量。很榮幸進入存保公司資訊人員第二階段口試，感謝長官撥冗蒞臨、閱讀個人自傳並予指教。
  自傳重點在於向長官們報告關於我的三項資訊:(1)報考動機、(2)優勢所在、(3)歷年獨立完成工作成果。

  Q1: 為什麼想加入存保公司？
  A1. 本資訊人員職缺須配合內部職務輪調及赴外埠地區出差。個人肯定內部輪調制度，且願意承擔赴外埠出差的挑戰。
		原因在於一般工作者從事同一職位2~3年或工作熟練後，容易出現職業倦怠，我也親身經歷過。
		若公司有內部職務輪調制度，可激發員工學習動機，藉由學習、執行、沉澱整理的正向循環，能塑造出讓員工樂在工作的環境。

  Q2: 為什麼存保公司要錄取我？(應該要寫具備勝任此份工作的能力，下次要調整)
  A2. 本身具備持續學習的行動力、流程標準化的習慣、可獨立作業亦樂於交流分享知識的特質，能勝任資訊人員工作及接受內部職務輪調。
		以最近一份工作為例(以.NET翻新院內舊系統)。
		改寫過程中並非單純地將VB6轉為C#，我會使用新語法讓程式碼更易於閱讀與理解。
		遭遇複雜邏輯段落時，則會向舊系統維護人員或業管單位諮詢流程細節，再進行改寫、重構和註解作業，讓新系統更易於維護。
		除了增加程式碼註解外，亦會撰寫系統使用手冊且即時更新，
		主要目的在於(1)供使用者排除初步異常、(2)當有內部職務輪調時，可完整確實地進行交接，讓接手人員縮短學習摸索期。

  Q3: 過去工作成果列表:
    1. 改寫掛號批價系統(VB6)至新平台(.NET)，開發WebAPI與自動繳費機廠商進行資料對接。
    2. 自行開發測試用轉碼工具(.NET)，供銀行大型主機程式員驗證程式調整前後結果時使用。
    3. 主動提出流程改善案，
      第一項是善用資料庫工具(SSIS)偵測報表檔案傳送成功否，主動告知維護人員及早排除異常、減少行員等無報表又通知連管科處理的時間浪費。
      第二項是限制存取資料庫的前提下，使用程式語言(.NET)篩選出應繳而未繳的客戶報表檔案, 減少行員以人工方式篩選的時間浪費。

  最後，期待自己能成為存保的一員，一起為守護所有存款人300萬元保障而努力，謝謝。

==口試準備==
公司為何要錄取你？5年後你會是什麼樣子？面試必問15個問題，讓你得體又加分
參考來源: https://www.businessweekly.com.tw/careers/blog/21789
	
	1. 可否介紹一下你自己？ => 針對面試職位及背景，簡短地強調你能夠提供給公司的東西。
		我：「各位長官好，我叫鄭光量。過去曾在軟體、金融及醫療業擔任資訊人員。之前主要負責資訊系統分析與設計，並從程式員角度協助執行銀行資訊安全防護工作(委外廠商是否確實修復系統弱點？)。」

	2. 為什麼想應徵這個職缺？
		我：「應徵動機有兩個，第一讓我繼續發揮所長、第二擁有內部職務輪調及赴外埠地區出差的機會，讓我不斷成長。職務輪調是提昇自我工作能力的良機。雖然剛開始難免會有挫敗，但這是必然的結果。只要挺過初期不適應，即是能力提昇顯著的印證。」

	3. 為什麼要錄取你？ => 長官希望聽到的答案是：(1)具備能勝任此份工作的能力; (2)能融入公司團隊與文化;
		簡章要求的工作內容是：
			1.資通安全管理系統維運、資安防護與偵測及資安事件處理。 
			2.資訊設備軟硬體、資訊系統備援及網路系統等維護管理。 
			3.資訊應用系統分析與設計、資料庫系統管理相關作業。 

		我：「因為我具備資訊應用系統分析與設計的能力，並且願意配合內部職務輪調及赴外埠地區出差。」

	4. 你最大的專長是？ => 長官希望聽到的答案是：回答與應徵職缺相關的專長
		我：「資訊應用系統分析與設計。從JSP、C#、SQL、JavaScript、Java、Git不斷地學習各式語言及工具，
				為自己累積領域知識，適時地運用在工作上。」

	5. 你有什麼弱點/缺點？ => 長官希望聽到的答案是：真誠地回答。最重要的是，一定要談到正如何設法克服這個弱點。
		我：「作事態度較嚴謹。目前正持續強化溝通能力，因為在溝通順暢環境下工作，問題能更迅速地解決。」

	6. 你最大的專業成就是什麼？
		我：「自行開發或與團隊開發的資訊系統，能幫助公司營運活動順暢執行」

	7. 你覺得5年後的你會是什麼樣子？
		我：「繼續在第一線擔任資訊人員，學習新技術及強化工作能力，利用自身價值在社會生存下去。」

	8. 你還有到哪些公司面試？
		我：「金融相關產業的公司」

	9. 你為何要離開目前的工作？ => 請說明你很渴望獲得新機會，而應徵職位比你過去或目前的工作更適合你。
		我：「想回台北發展，獲得有機會內部輪調且赴外出差的職位」

	10. 你為何被解雇？
		我：「沒有被解雇」

	11. 上司或同事如何形容你？ => 這個問題是對未被問到的個人特質加以討論的大好機會。
		我：「工作時沈默，下班後開朗」

	12. 你的工作經歷中為何有一段空白？ => 回答只須簡短且正面，例: 充實自我
		我：「因家庭因素須返回宜蘭，在這段期間仍不斷地充實自我，考取JCCP電腦軟體應用稽核師。」

	13. 你到職後30、60或90天內打算怎麼作？
		我：「配合公司職務規劃安排，儘速熟悉工作環境進入狀況」

	14. 你對薪資有什麼要求？
		我：「配合簡章規定」

	15. 你覺得我們公司怎樣可以更好或有所不同？
		我：「是否能利用YouTube頻道，向年輕人宣傳公司未來發展及福利，吸引更多年輕人進公司服務。」

# 準備: 讓你成為面試達人的六項準備工作
  c. 面試前的準備工作:
		(0) 對應徵公司的了解 
			參考來源：https://www.cdic.gov.tw/upload/cont_att/32273f32-07e6-487b-ab93-f5ae98afe259.pdf

			業務目標精進：
				一、 持續強化「存保公司金融預警系統」。
				二、 ESG 議題係目前金融市場及金融監理關注之重點，對銀行業授信及經營將產生重大影響，「存保公司對要保機構之風險監控亦將與時俱進」。
				三、 將「持續加強國際交流，提升國際知名度」。
				四、 「存保公司將持續強化資訊安全控管措施」。

    (1) 對應徵職位進行全面了解

      0. 公司-職缺：存保公司-資訊人員

      1. 了解職位職責(工作內容與過去經歷是否有重曡. 如沒有, 儘量不要嘗試)         
				1.資通安全管理系統維運、資安防護與偵測及資安事件處理。(X)
				2.資訊設備軟硬體、資訊系統備援及網路系統等維護管理。(X)
				3.資訊應用系統分析與設計、資料庫系統管理相關作業。(O)

      2. 了解職位招聘要求(技能要求自己是否能滿足, 如不足, 該如何強化)
				曾任職公民營企業資通安全、資訊管理、系統分析或資料庫管理等工作經驗 3 年（含）以上，具備 ISMS、Windows、Linux、VM、AD、.NET 或 MS SQL 等相關實務經驗。(O, 具備.NET 及 MS SQL開發的實務經驗)
    
    (2) 對應徵公司進行了解 
      1. 你了解我們公司嗎? 可以具體說明嗎? 
            存款保險常見問答 https://www.cdic.gov.tw/main_estimate/faq.aspx
            
            a. 台幣外幣及利息都有保，最高保額300萬元。若超過300萬元，可轉至其他加入存保的銀行。
            b. 什麼是存保? 存款保險係由吸收存款金融機構(以下簡稱要保機構)向中央存款保險股份有限公司(以下簡稱中央存保公司)投保並繳付保險費的一種政策性保險，存款人不需繳付任何保險費。倘要保機構經其主管機關勒令停業，中央存保公司將在最高保額新臺幣300萬元內，依法賠付存款人，以保障存款人權益並維護金融安定。
            c. 為何存保制度將保障存款人權益列為首要宗旨? 存款大眾多為小額存款人，其存款係辛苦工作之血汗錢及養老本，政府爰成立存款保險機制，由中央存保公司對小額存款人依法提供保障，以維持金融安定與社會秩序。
            d. 存保制度如何維護金融穩定? 政府成立存款保險機制，對大多數的存款人依法提供保障，另方面對加入存款保險之要保機構，配合主管機關金融監理政策及依存保條例加強承保風險控管，可防範擠兌之擴散及避免系統性危機，確保金融安定。
            e. 存保業務由哪個單位負責辦理? 中央存保公司
            f. 存款保險與一般保險的差異? 目的不同、繳費及受益對象不同、功能不同、政策任務不同
            g. 民眾如何得知金融機構加入存保否? 辨識「存款保險標示牌」
            h. 存款保險的最高保額? 最高保額是指每一存款人，在國內同一家要保機構新臺幣及外幣存款之本金及利息受到存款保險保障的最高額度。中央存保公司賠付時，係以新臺幣為支付幣別。
            i. 存款保險的保障範圍? 存款保險標的以中華民國境內存款為保障範圍。(支存、活存、定存)
            j. 本國銀行海外分行之存款是否存保保障? 沒有
            k. 受存保保障的存款人有哪些? 自然人、法人、政府機關、信託財產、電子支付帳戶使用者
            L. 同一自然人在同一要保機構開立個人存款帳戶及獨資存款帳戶，是否存保保障? 是的，兩個帳戶均受保障
				
      2. 為什麼想加入我們公司?
				應徵動機有兩個，第一讓我繼續發揮所長、第二擁有內部職務輪調及赴外埠地區出差的機會，讓我不斷成長。

      3. 我們公司最吸引你的地方是?
				這是一家實踐企業社會責任(CSR)的公司，為保障存款人權益，維護金融秩序，使人民安心就業的公司。

    (3) 各種材料的準備 
				自己帶份履歷, 及相關證明文件 (TODO: 帶份自己的履歷 & 證明文件)

    (4) 外在形象的準備
				整齊乾淨, 符合應徵產業 (TODO: 這次要穿西裝, 打領帶, 表示對面試的重視..)

    (5) 面試問題的準備 
      1. 2分鐘自我介紹
      Q：你是誰、你擁有這個職缺所需的工作能力與特質嗎、你為什麼「在這裡」收尾. (你應徵動機為何)
      A：各位長官好，我叫鄭光量。
      曾在軟體業及金融業擔任資訊人員，從事資訊系統分析與設計、資料庫系統開發等作業。
      前一份工作內容是HIS系統維護，將批價系統以.NET技術改寫，並與繳費機廠商進行資料抛轉，順利完成上線。
      應徵動機有兩個，第一讓我繼續發揮所長、第二擁有內部職務輪調及赴外埠地區出差的機會，讓我不斷成長。
      以上是我的自我介紹，謝謝您的聆聽與指教。

      2. 工作中最有成就感的事
				我：「自行開發或與團隊開發的資訊系統，能幫助公司營運活動順暢執行」

      3. 工作上有哪些技能/天賦/專長
				我：「資訊應用系統分析與設計。從JSP、C#、SQL、JavaScript、Java、Git不斷地學習各式語言及工具，為自己累積領域知識，適時地運用在工作上。」

      4. 與別人相比, 你的優勢在哪裡 (為什麼我們要錄取你)
				我：「本身具備持續學習的行動力、流程標準化的習慣、可獨立作業亦樂於交流分享知識的特質，能勝任資訊人員工作及接受內部職務輪調。」

		以最近一份工作為例(以.NET翻新院內舊系統)。
		改寫過程中並非單純地將VB6轉為C#，我會使用新語法讓程式碼更易於閱讀與理解。
		遭遇複雜邏輯段落時，則會向舊系統維護人員或業管單位諮詢流程細節，再進行改寫、重構和註解作業，讓新系統更易於維護。
		除了增加程式碼註解外，亦會撰寫系統使用手冊且即時更新，
		主要目的在於(1)供使用者排除初步異常、(2)當有內部職務輪調時，可完整確實地進行交接，讓接手人員縮短學習摸索期。

      4.1 遇到工作上最大的挫折是什麼, 你如何克服呢? 
				我：「在銀行工作時，主管交辦開發主機資料庫稽核檔案轉檔程式。開發時卡在無編碼規則可循。最後由原廠提供規則後，才得以接續開發工作。從這次事件中獲得教訓是，工作卡關時試著自行排除，但仍無法解決時須及時反應。」

      4.2 你有什麼缺點，你如何克服呢?
				我：「作事態度較嚴謹。目前正持續強化溝通能力，因為在溝通順暢環境下工作，問題能更迅速地解決。」

      4.3 你可以接受加班嗎?
				我：「可以」

      4.4 你多久可以到職?
				我：「依公司規定」

      5. 有沒有什麼問題想問?
            => 此職缺主要負責的哪些系統別.
            => 此職缺隸屬的部門.
            => 此職缺近期須完成的專案，是否已啟動.
            => 此職缺目前面臨的挑戰.
            => 針對新進人員, 公司有提供哪些資源讓新人儘速融入工作.
            => 可否介紹一下資訊部門與其他部門的合作模式.

    (6) 心理準備 
				=> 放開自己, 把最真實的自己表現出來. 熟悉自己的履歷, 多作準備, 使自己更從容、更有自信.

【大企業或新創公司的怪問題】
1.	你覺得你聰明嗎？我正試著當個聰明人，我對聰明人的定義是：(1)從錯誤中學習; (2)熱愛閱讀，拓展自己的知識; (3)能看到事情的正反兩面。聰明人有分析事情正反面的能力，並會提出自己的看法，說出有說服力的論述; (4)說話前三思。真正的聰明人，不會讓自己陷入禍從口出的困境中，說話前必定會三思; (5)不會過度在意他人眼光。聰明的人不會過度在意他人眼光，不會因為他人眼光而影響自己的想法。
2.	你覺得該如何當一個好員工？須視產業別而定，在製造工廠內依SOP執行，就是好員工。
3.	你處理過最難的問題，以及你如何解決的？與人討論，向外尋找支援。
4.	你會因為什麼原因離開我們公司？業務經營欠佳被資遣時。
5.	你如何處理一個有期限但無法達成的任務？若無法達成是已知，我會在期限內向客戶報告無解。
6.	如果你是一個主管，甄選員工的條件為何？看他/她的個人特質是否與職缺所需相符。
