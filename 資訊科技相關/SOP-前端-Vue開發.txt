=學習來源: 到底要怎麼開始開發網站? --- 從入門到使用Vue, Firebase製作老闆交代的網站系列 = https://ithelp.ithome.com.tw/articles/10233792

  npm(Node.JS 套件管理程式), 下載Vue也是透過npm #注意: npm install 要搭配 package.json使用, 不然它不知道要下載什麼.

    1.下載 Node.JS # 記得將安裝路徑加入系統變數中, npm才能到處執行
    2.npm install 尋找 package.json 內定義, 下載所需套件項目.

  切換至專案路徑, 下載必要套件 ex. C:\Projects\Projects_NodeJS\30days-challange

    1.cd C:\Projects\Projects_NodeJS\30days-challange
    2.檢查專案路徑有沒有 package.json
    3.執行下載作業 npm install 
  
/* 資料來源: W3schools Vue Tutorial */ https://www.w3schools.com/vue/index.php

  Get a Free Vue WebServer on W3schools
  https://klcheng546.w3spaces.com/

  # Vue Introduction
    * 使用JavaScript Framework的優點
      > In normal JavaScript we need to write HOW HTML and JavaScript is connected, 
      but in Vue we simply need to make sure that {there IS a connection}
      and let Vue take care of the rest.
      > It allows for a more efficient development process with {a template-based syntax}, 
      {two-way data binding}, and a {centralized state management}.
    
    * My first Vue page    
      1. Start with a basic HTML file.
      2. Add a <div> tag with id="app" for Vue to connect with.
      3. Tell the browser how to handle Vue code by adding a <script> tag with a link to Vue.
      4. Add a <script> tag with the Vue instance inside.
      5. Connect the Vue instance to the <div id="app"> tag.
      6. Display Vue message with Text Interpolation.
        
        <html> //Step1
          <body>
            <div id="app">

              {{ message }} //Step6

            </div> //Step2
          </body>

          <script src="https://unpkg.com/vue@3/dist/vue.global.js"></script> //Step3
          <script>
            const app = Vue.createApp( //Step4
              dunction() {
                return {
                  message: "Hello Vue" //分號 ';' 不可加.
                }
              }
            ); //分號 ';' 可加可不加.

            app.mount(#app); //Step5

          </script>
        </html>

    * JavaScript in Text Interpolation
      > Simple JavaScript expressions can also be written inside the double curly braces {{ }}.

      <div id="app">
        {{'Random number: ' + Math.ceil(Math.random()*6) }}
        <!--可執行的.-->
      </div>

  # Vue Directives (Vue 指令, 如同 asp.net web form 也有自創HTML屬性值, 例: bind=(#...))
    * Vue directives are special HTML attributes with the prefix 'v-' 
      that give the HTML tag extra functionality.
    * Vue directives connect to the Vue instance to create dynamic and reactive user interfaces.
    * With Vue, creating responsive pages is much easier and 
      requires less code compared to traditional JavaScript methods.

    * 不同的 Vue Directives
      > v-bind
        Connects an attribute in an HTML tag to a data variable inside the Vue instance.
        ex. 
        <div id="app">
          <div v-bind:class="vueClass">I am A pink Pig </div>
        </app>
        <style>
          .pinkPig { //挑出class="pinkPig" 的HTML element套進去
            color: pink;
          }
          #blackPig { //挑出 id="blackPig" 的HTML element套進去
            color: pink;
          }
          p { //挑出所有 <p></p> 的HTML element套進去
            color: pink;
          }
        </style>
        <script>
          const app = Vue.createApp(
            data(){
              return {
                vueClass: "pinkPig"
              }
            }
          );
        </script>

      > v-if
        Creates HTML tags depending on a condition. 
        Directives {v-else-if} and {v-else} are used together with the {v-if} directive.

      > v-show
        Specifies if an HTML element should be visible or not depending on a condition.

      > v-for
        Creates a list of tags based on an array in the Vue instance using a for-loop.

      > v-on
        Connects an event on an HTML tag to a JavaScript expression or a Vue instance method. 
        We can also define more specifically how our page should react to a certain event 
        by using event-modifiers.

      > v-model
        Used in HTML forms with tags like <form>, <input> and <button>. 
        Creates a two way binding between an input element and a Vue instance data property.
  
  # Vue v-bind Directive (說明的更詳細)

    * 語法, 注意div 沒有id 值)
      <div v-bind:[attribute]="[Vue data]"></div> 

        例: <img v-bind:src="url"> 
      
      (It Works)
      <div id="app">
        <div v-bind:class="vueClass">I am A pink Pig </div>
      </app>

      (注意: Not Working)
      <div id="app" v-bind:class="vueClass">
        <div>I am A pink Pig </div>
      </app>

    * CSS Binding
      > Bind style
       <div v-bind:style="{ fontSize: size }"> //註: size變數是vue要替換項目.

       <script></script>


